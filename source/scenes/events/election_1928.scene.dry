title: Reichstag Elections
new-page: true
tags: event
priority: -1
view-if: (year = next_election_year and month >= next_election_month) or (year > next_election_year)
on-departure: in_election = 0; next_election_year = next_election_year + 4; n_elections += 1; next_election_time = time + 48
set-jump: post_election_1928
#face-image: img/Rothe_Wahlen_1903.jpg


= Elections, [+ month : month +] [+ year +]

The Reichstag elections are to be held now.

- @election_algorithm: May we do our best...
- @cancel_elections

@cancel_elections
title: We cannot hold the elections now. Cancel the elections.
subtitle: This is an anti-democratic move that may backfire.
view-if: in_emergency_government == 1 and president == "Braun" and not presidential_powers

Since we are currently ruling as part of an emergency government, we may use quasi-constitutional trickery to significantly delay these elections, and continue governing via Article 48. This is likely to be extremely unpopular both with our base and with the other parties. However, this may be necessary to prevent the extremists from gaining power.

- @cancel_elections_2: Yes, do it.
- @election_algorithm: No, let's hold the elections.

@cancel_elections_2
on-departure: next_election_year = next_election_year + 1; next_election_time = time + 12; pro_republic -= 10; dvp_relation -= 8; lvp_relation -= 8; z_relation -= 8; ddp_relation -= 10; kpd_relation -= 8; coup_progress += 2; workers_spd -= 4; new_middle_spd -= 5; old_middle_spd -= 5; rural_spd -= 5; catholics_spd -= 5; unemployed_spd -= 5; coup_progress += 2 if nsdap_normalized >= 0.3; coup_progress += 2 if nsdap_normalized + dnvp_normalized >= 0.5 and dnvp_ideology = "Radical"; coup_progress += 2 if nsdap_normalized + dnf_normalized >= 0.5 and dnvp_ideology = "Moderate"; sa_strength += 100 if coup_progress >= 7; sh_strength += 100 if coup_progress >= 7
achievement: ausnahmezustand

Fine. President [+ president +] has taken the unprecedented step of canceling these elections. New elections are scheduled for [+ next_election_month : month +] [+ next_election_year +].

Let us hope this does not backfire.

@post_election_1928
on-arrival: {!  
    var new_party_sum = 0;
    var total_reichstag_without = 0;  // Initialize a variable to accumulate 'reichstag_without_' values
    var total_other_party_sum = 0;    // Initialize a variable to accumulate '_other_party_sum' values
    if (Q.year === 1928 && Q.dnvp_leader === "Hugenberg" || Q.dnvp_westarp) {
        Q.adjustmentFactors_other = 0.75;
    } else if (Q.year === 1929 && Q.dnvp_leader === "Hugenberg") {
        Q.adjustmentFactors_other = 0.85;
    } else if (Q.year === 1930 && Q.dnvp_leader === "Hugenberg") {
        Q.adjustmentFactors_other = 0.9;
    } else if (Q.year === 1931 && Q.dnvp_leader === "Hugenberg") {
        Q.adjustmentFactors_other = 0.8;
    } else if (Q.year >= 1932 && Q.dnvp_leader === "Hugenberg") {
        Q.adjustmentFactors_other = 0.6;
    } else if (Q.year >= 1928 && Q.dnvp_leader === "Triumvirate") {
        Q.adjustmentFactors_other = 0.75;
    } else if (Q.year === 1928 && Q.dnvp_ideology === "Moderate") {
        Q.adjustmentFactors_other = 0.65;
    } else if (Q.year === 1929 && Q.dnvp_ideology === "Moderate") {
        Q.adjustmentFactors_other = 0.7;
    } else if (Q.year === 1930 && Q.dnvp_ideology === "Moderate") {
        Q.adjustmentFactors_other = 0.75;
    } else if (Q.year === 1931 && Q.dnvp_ideology === "Moderate") {
        Q.adjustmentFactors_other = 0.7;
    } else if (Q.year >= 1932 && Q.dnvp_ideology === "Moderate") {
        Q.adjustmentFactors_other = 0.6;
    }
    if (Q.kvp_cnblp_sister) {
        Q.adjustmentFactors_other += 0.05;
    }
    if (Q.bourgeois_parliament || Q.bourgeois_parliament_no_liberals) {
        Q.adjustmentFactors_other += 0.05;
    }
    if (Q.other_votes >= 8 && Q.year >= 1931) {
        Q.adjustmentFactors_other += 0.1;
    }
    // Step 1: Calculate adjusted values and the sum for redistribution
    for (var party of Q.parties) {
        let factor = Q['adjustmentFactors_' + party] || 1.0; // Default to 1.0 if not set
        
        Q['old_' + party + '_r'] = Q[party + '_r']; // Store the original r value for comparison
        
        // Handle constitutional reform logic: set the party's share to 0 based on conditions
        if (Q.constitutional_reform > 0 &&
            (Q[party + '_votes'] < Q.electoral_threshold || 
            (Q.electoral_threshold > 1 && party === 'other') || 
            Q[party + '_banned'])) {
            Q[party + '_r'] = 0;
        } else {
            // Adjust `r` based on the adjustment factor if not affected by constitutional reform
            Q['original_' + party + '_r'] = Math.round(Q[party + '_votes'] * 10) / 10;
            Q[party + '_r'] = Math.round(Q[party + '_votes'] * factor * 10) / 10;
        }
        
        if (factor !== 1.0) { // Only apply to parties with adjustment factors
            // Calculate the Reichstag without the current party's share
            Q['reichstag_without_' + party] = 100 - Q['original_' + party + '_r'];
            total_reichstag_without += Q['reichstag_without_' + party];  // Accumulate the total of 'reichstag_without_' values
            
            // Calculate the sum of the remaining parties
            Q[party + '_other_party_sum'] = Q['reichstag_without_' + party] - (Q[party + '_votes'] - Q[party + '_r']);
            total_other_party_sum += Q[party + '_other_party_sum'];  // Accumulate the total of '_other_party_sum' values
        } else {
            // For non-adjusted parties, accumulate their r value for the redistribution
            new_party_sum += Q[party + '_r'];
        }
    }
    
// Step 2: Redistribute results among non-adjusted parties to ensure the total is 100%
if (new_party_sum > 0) {
    for (var party of Q.parties) {
        let factor = Q['adjustmentFactors_' + party] || 1.0;

        var total_reichstag_without_party = total_reichstag_without - (100 - Q['original_' + party + '_r']);
        var total_other_party_sum_party = total_other_party_sum - (Q['reichstag_without_' + party] - (Q[party + '_votes'] - Q[party + '_r']));

        if (factor === 1.0) {
            // Calculate the new `r` value for non-adjusted parties
            Q[party + '_r'] = Math.round((Q[party + '_r'] * total_reichstag_without) / total_other_party_sum * 10) / 10;
        } else if (factor !== 1.0 && total_reichstag_without_party > 0 && total_other_party_sum_party > 0) {
            let scaling_factor = total_reichstag_without_party / total_other_party_sum_party;
            Q[party + '_r'] = Math.round(Q[party + '_r'] * scaling_factor * 10) / 10;
        }
    }

    // Step 3: Normalize to ensure the total sums to exactly 100%
    let total_r_sum = 0;

    // Calculate the total of all `r` values after redistribution
    for (var party of Q.parties) {
        total_r_sum += Q[party + '_r'];
    }

    // Adjust each party's `r` value proportionally if the total isn't 100
    if (total_r_sum !== 100) {
        let normalization_factor = 100 / total_r_sum; // Scale to match 100%
        for (var party of Q.parties) {
            Q[party + '_r'] = Math.round(Q[party + '_r'] * normalization_factor * 10) / 10;
        }
    }
}
    
    // Step 3: Calculate changes in results
    for (var party of Q.parties) {
        Q['change_' + party + '_r'] = Q[party + '_r'] - Q['old_' + party + '_r'];
        var sign = Q['change_' + party + '_r'] > 0 
                   ? '<img src="img/arrowup.jpg"> ' 
                   : Q['change_' + party + '_r'] < 0 
                     ? '<img src="img/arrowdown.jpg"> ' 
                     : '<img src="img/steady.jpg"> ';
        Q['change_' + party + '_r'] = Math.abs(Q['change_' + party + '_r']);
        Q['str_change_' + party] = sign + parseFloat(Q['change_' + party + '_r']).toFixed(1);
    
        // Calculate changes in votes
        Q['change_' + party + '_votes'] = Q[party + '_votes'] - Q['previous_' + party + '_last_election_votes'];
        if (Q['previous_' + party + '_last_election_votes'] === undefined) {
            Q['change_' + party + '_votes'] = Q[party + '_votes'];
        }
    
        var sign2 = Q['change_' + party + '_votes'] > 0 
                    ? '<img src="img/arrowup.jpg"> ' 
                    : Q['change_' + party + '_votes'] < 0 
                      ? '<img src="img/arrowdown.jpg"> ' 
                      : '<img src="img/steady.jpg"> ';
        Q['str_votes_change_' + party] = sign2 + Math.abs(Q['change_' + party + '_votes']).toFixed(1);
    }
    
    // Handle demographic changes for all parties
    for (var party of Q.parties) {
        for (var c of Q.classes) {
            Q[c + "_change_" + party + '_display'] = Q[c + '_' + party + '_display'] - Q['old_' + c + '_' + party + '_display'];
            var sign3 = Q[c + "_change_" + party + '_display'] > 0 ? '+' : '';
            Q['demo_change_' + c + '_' + party + '_display'] = sign3 + parseFloat(Q[c + "_change_" + party + '_display']).toFixed(0);
            Q['old_' + c + '_' + party + '_display'] = Q[c + '_' + party + '_display'];
        }
    }
    
    // Store current votes as previous for the next iteration
    for (var party of Q.parties) {
        Q[party + '_last_election_votes'] = parseFloat(Q[party + '_votes']).toFixed(1);
        Q['previous_' + party + '_last_election_votes'] = parseFloat(parseFloat(Q[party + '_last_election_votes']).toFixed(1));
    }    
    
Q.cnblp_r = Math.round(Q.cnblp_votes * Q.adjustmentFactors_other * 10) / 10;
Q.wp_r = Math.round(Q.wp_votes * Q.adjustmentFactors_other * 10) / 10;
Q.csvd_r = Math.round(Q.csvd_votes * Q.adjustmentFactors_other * 10) / 10;

Q.z_minus_bvp_r = parseFloat((Q.z_r - 3).toFixed(1));
Q.z_minus_bvp_votes = parseFloat((Q.z_votes - 3).toFixed(1));

// The largest party can only be the NSDAP or the SPD.
Q.largest_party = 'SPD';
if (Q.nsdap_r >= Q.spd_r && Q.nsdap_r >= Q.kpd_r) {
    Q.largest_party = 'NSDAP';
}

if (Q.kpd_r >= Q.spd_r && Q.kpd_r >= Q.nsdap_r) {
    Q.largest_party = 'KPD';
}

// coalitions
if (Q.lvp_formed) {
    Q.weimar_coalition = parseFloat((Q.spd_r + Q.lvp_r + Q.z_r - 3).toFixed(1));
} else {
    Q.weimar_coalition = parseFloat((Q.spd_r + Q.ddp_r + Q.z_r - 3).toFixed(1));
}

if (Q.lvp_formed) {
    Q.social_liberal_coalition = parseFloat((Q.spd_r + Q.lvp_r).toFixed(1));
} else {
    Q.social_liberal_coalition = parseFloat((Q.spd_r + Q.ddp_r).toFixed(1));
}

Q.social_catholic_coalition = parseFloat((Q.spd_r + Q.z_r - 3).toFixed(1));

if (Q.lvp_formed) {
    Q.grand_coalition = parseFloat((Q.spd_r + Q.lvp_r + Q.z_r).toFixed(1));
} else {
    Q.grand_coalition = parseFloat((Q.spd_r + Q.ddp_r + Q.z_r + Q.dvp_r).toFixed(1));
}

if (Q.kvp_formed && Q.lvp_formed) {
    Q.bourgeois_coalition = parseFloat((Q.z_r + Q.lvp_r + Q.other_r + Q.kvp_r).toFixed(1));
} else if (Q.kvp_formed && !Q.lvp_formed) {
    Q.bourgeois_coalition = parseFloat((Q.ddp_r + Q.z_r + Q.dvp_r + Q.other_r + Q.kvp_r).toFixed(1));
} else if (Q.lvp_formed && !Q.kvp_formed) {
    Q.bourgeois_coalition = parseFloat((Q.z_r + Q.lvp_r + Q.other_r).toFixed(1));
} else {
    Q.bourgeois_coalition = parseFloat((Q.ddp_r + Q.z_r + Q.dvp_r + Q.other_r).toFixed(1));
}

if (Q.kvp_formed && Q.lvp_formed) {
    Q.center_right_coalition = parseFloat((Q.z_r + Q.lvp_r + Q.other_r + Q.dnvp_r + Q.kvp_r).toFixed(1));
} else if (Q.kvp_formed && !Q.lvp_formed) {
    Q.center_right_coalition = parseFloat((Q.z_r + Q.ddp_r + Q.dvp_r + Q.other_r + Q.dnvp_r + Q.kvp_r).toFixed(1));
} else if (!Q.kvp_formed && Q.lvp_formed) {
    Q.center_right_coalition = parseFloat((Q.z_r + Q.lvp_r + Q.other_r + Q.dnvp_r).toFixed(1));
} else {
    Q.center_right_coalition = parseFloat((Q.z_r + Q.ddp_r + Q.dvp_r + Q.other_r + Q.dnvp_r).toFixed(1));
}

if (Q.lvp_formed) {
    Q.right_coalition = parseFloat((Q.z_r + Q.lvp_r + Q.other_r + Q.dnvp_r).toFixed(1));
} else {
    Q.right_coalition = parseFloat((Q.z_r + Q.dvp_r + Q.other_r + Q.dnvp_r).toFixed(1));
}

if (Q.dnvp_ideology === "Moderate") {
    Q.far_right_coalition = parseFloat((Q.dnf_r + Q.nsdap_r).toFixed(1));
} else {
    Q.far_right_coalition = parseFloat((Q.dnvp_r + Q.nsdap_r).toFixed(1));
}

Q.left_coalition = parseFloat((Q.spd_r + Q.kpd_r + Q.sapd_r).toFixed(1));

if (Q.lvp_formed) {
    Q.popular_front_coalition = parseFloat((Q.spd_r + Q.kpd_r + Q.z_r - 3 + Q.sapd_r).toFixed(1));
} else if (Q.liberal_parliament == 0 && Q.bourgeois_parliament_ddp == 0) {
    Q.popular_front_coalition = parseFloat((Q.spd_r + Q.kpd_r + Q.z_r + Q.ddp_r - 3 + Q.sapd_r).toFixed(1));
} else if (Q.liberal_parliament == 1 || Q.bourgeois_parliament_ddp == 1) {
    Q.popular_front_coalition = parseFloat((Q.spd_r + Q.kpd_r + Q.z_r - 3 + Q.sapd_r).toFixed(1));
}

if (Q.dnvp_ideology === "Moderate") {
    Q.anti_democratic_coalition = parseFloat((Q.kpd_r + Q.nsdap_r + Q.dnf_r).toFixed(1));
} else {
    Q.anti_democratic_coalition = parseFloat((Q.kpd_r + Q.nsdap_r + Q.dnvp_r).toFixed(1));
}

if (Q.lvp_formed) {
    Q.neo_weimar_coalition = parseFloat((Q.spd_r + Q.lvp_r + Q.z_r + Q.other_r).toFixed(1));
} else {
    Q.neo_weimar_coalition = parseFloat((Q.spd_r + Q.ddp_r + Q.z_r + Q.dvp_r + Q.other_r).toFixed(1));
}

if (Q.kvp_formed && Q.lvp_formed) {
    Q.cordon_sanitaire = parseFloat((Q.spd_r + Q.lvp_r + Q.z_r + Q.other_r + Q.kvp_r).toFixed(1));
} else if (Q.kvp_formed && !Q.lvp_formed) {
    Q.cordon_sanitaire = parseFloat((Q.spd_r + Q.ddp_r + Q.z_r + Q.dvp_r + Q.other_r + Q.dnvp_r + Q.kvp_r).toFixed(1));
} else if (Q.lvp_formed && !Q.kvp_formed) {
    Q.cordon_sanitaire = parseFloat((Q.spd_r + Q.z_r + Q.lvp_r + Q.other_r + Q.dnvp_r).toFixed(1));
} else {
    Q.cordon_sanitaire = parseFloat((Q.spd_r + Q.z_r + Q.ddp_r + Q.dvp_r + Q.other_r + Q.dnvp_r).toFixed(1));
}

// Q.hitler_right_coalition = parseFloat((Q.z_r + Q.dnvp_r + Q.nsdap_r).toFixed(1));

if (Q.lvp_formed) {
    Q.progressive_coalition = parseFloat((Q.spd_r + Q.kpd_r + (Q.lvp_r / 3) + Q.sapd_r).toFixed(1));
} else {
    Q.progressive_coalition = parseFloat((Q.spd_r + Q.kpd_r + Q.ddp_r + Q.sapd_r).toFixed(1));
}

if (Q.kpd_relation >= 30 && Q.sapd_formed == 1) {
    Q.weimar_coalition += Q.sapd_r;
}

Q.leverage = Q.spd_r;
Q.support_kpd_grand = 0;
Q.support_kpd_weimar = 0;

Q.bruning_coalition = Q.neo_weimar_coalition;
if (Q.dnvp_ideology == "Moderate" && !Q.dnvp_defect) Q.bruning_coalition = Q.cordon_sanitaire;
Q.bruning_coalition_loss = 0;
if (Q.cnblp_defect) Q.bruning_coalition_loss += Q.cnblp_r;
if (Q.wp_defect) Q.bruning_coalition_loss += Q.wp_r;
if (Q.dvp_defect) Q.bruning_coalition_loss += (Q.dvp_r*0.7);
if (Q.lvp_defect) Q.bruning_coalition_loss += (Q.lvp_r*0.4);
Q.bruning_coalition = Q.bruning_coalition - Q.bruning_coalition_loss;
Q.dnvp_angry = 0;

Q.grand_coalition_failed = 0;
// Reset government and ministers... Based on Brüning's 1930 govt
Q.coalition_dissent = 0;
Q.kpd_coalition_dissent = 0;
Q.spd_in_government = 0;
Q.in_weimar_coalition = 0;
Q.in_grand_coalition = 0;
Q.in_social_catholic_coalition = 0;
Q.in_social_catholic_coalition = 0;
Q.in_left_front = 0;
Q.in_popular_front = 0;
Q.in_emergency_government = 0;
Q.in_minority_government = 0;
Q.in_unity_government = 0;
Q.spd_toleration = 0;
Q.spd_toleration_right = 0;
Q.spd_caretaker = 0;
Q.hindenburg_angry = 0;
if (Q.lvp_formed) Q.foreign_minister_party = 'LVP'; 
if (!Q.lvp_formed) Q.foreign_minister_party = 'DVP';
Q.interior_minister_party = 'Z';
Q.justice_minister_party = 'I';
Q.labor_minister_party = 'Z';
Q.reichswehr_minister_party = 'I';
if (Q.lvp_formed) Q.economic_minister_party = 'LVP'; 
if (!Q.lvp_formed) Q.economic_minister_party = Q.ddp_name;
if (Q.lvp_formed) Q.finance_minister_party = 'LVP'; 
if (!Q.lvp_formed) Q.finance_minister_party = 'DVP';
Q.agriculture_minister_party = 'Z';

// reset KPD goals
Q.kpd_goals_seen = 0;
Q.kpd_ultimatum_seen = 0;
Q.welfare_goal = 0;
Q.agriculture_goal = 0;
Q.economy_goal = 0;
Q.finance_goal = 0;
Q.labor_goal = 0;
Q.foreign_goal = 0;
Q.interior_goal = 0;
Q.reichswehr_goal = 0;

Q.welfare_goal_completed = 0;
Q.agriculture_goal_completed = 0;
Q.economy_goal_completed = 0;
Q.finance_goal_completed = 0;
Q.labor_goal_completed = 0;
Q.foreign_goal_completed = 0;
Q.interior_goal_completed = 0;
Q.reichswehr_goal_completed = 0;

Q.strike_term_seen = 0;
Q.grand_coalition_collapsed = 0;

// understanding the enemy
if (Q.nsdap_r >= 15) {
    Q.understanding_enemy_timer = 2;
}

if (Q.dstp_formed && !Q.dstp_collapse_seen) {
    Q.dstp_election = 1;
}

if (Q.ddp_r < 3.6 && !Q.lvp_formed && !Q.liberal_parliament && !Q.bourgeois_parliament_ddp) {
    Q.ddp_factionless = 1
}

var election_result = {'date': new Date(Q.year, Q.month - 1)};
for (var party of Q.parties) {
    election_result[party] = Q[party + '_r'];
}
Q.election_records.push(election_result);
!}
on-departure: nazi_urgency = 1 if (nazi_urgency == 0 and nsdap_r >= 15)
on-display: {!
data = [{
    "id": "kpd",
    "legend": "KPD",
    "name": "KPD",
    "seats": Math.round(Q.kpd_r * 5),
}];

if (Q.sapd_formed && Q.sapd_r) {
    data.push({
        "id": "sapd",
        "legend": "SAPD",
        "name": "SAPD",
        "seats": Math.round(Q.sapd_r * 5),
    });
}

data = data.concat([{
    "id": "spd",
    "legend": "SPD",
    "name": "SPD",
    "seats": Math.round(Q.spd_r * 5),
}]);

if (Q.ddp_r && !Q.lvp_formed) {
    data.push({
        "id": "ddp",
        "legend": Q.ddp_name,
        "name": Q.ddp_name,
        "seats": Math.round(Q.ddp_r * 5),
    });
}

if (Q.lvp_r && Q.lvp_formed) {
    data.push({
        "id": "lvp",
        "legend": "LVP",
        "name": "LVP",
        "seats": Math.round(Q.lvp_r * 5),
    });
}

data = data.concat([{
        "id": "z",
        "legend": "Center",
        "name": "Center",
        "seats": Math.round((Q.z_r - 3) * 5),
    },
    {
        "id": "bvp",
        "legend": "BVP",
        "name": "BVP",
        "seats": Math.round(3 * 5),
    }
]);

if (Q.dvp_r && !Q.lvp_formed) {
    data.push({
        "id": "dvp",
        "legend": "DVP",
        "name": "DVP",
        "seats": Math.round(Q.dvp_r * 5),
    });
}

if (Q.other_r) {
    data.push({
        "id": "other",
        "legend": "Other",
        "name": "Other",
        "seats": Math.round(Q.other_r * 5),
    });
}

if (Q.kvp_formed && Q.kvp_r) {
    data.push({
        "id": "kvp",
        "legend": "KVP",
        "name": "KVP",
        "seats": Math.round(Q.kvp_r * 5),
    });
}

if (Q.dnvp_r) {
    data.push({
        "id": "dnvp",
        "legend": "DNVP",
        "name": "DNVP",
        "seats": Math.round(Q.dnvp_r * 5),
    });
}

if (Q.dnf_formed && Q.dnf_r) {
    data.push({
        "id": "dnf",
        "legend": "DNF",
        "name": "DNF",
        "seats": Math.round(Q.dnf_r * 5),
    });
}
data = data.concat([{
    "id": "nsdap",
    "legend": "NSDAP",
    "name": "NSDAP",
    "seats": Math.round(Q.nsdap_r * 5),
}, ]);

if (window && d3) {
    var width = 500;
    var height = 500;
    var screenWidth = document.getElementById('content').offsetWidth;
    if (screenWidth < width - 50) {
        width = screenWidth - 50;
        height = width;
        document.getElementById("reichstag").style.height = screenWidth/2 + "px";
    }
    var parliament = d3.parliament();
    parliament.width(width).height(height).innerRadiusCoef(0.4);
    parliament.enter.fromCenter(true).smallToBig(true);
    parliament.exit.toCenter(false).bigToSmall(true);
    d3.select("#reichstag").datum(data).call(parliament);

    var lines = d3.linegraph(false, false,
            Q.parties,
            {'spd': '#E3000F', 'kpd': '#700000', 'ddp': '#D3C24D', 'z': '#000', 'dvp': '#D5AC27', 'dnvp': '#3E88B3', 'nsdap': '#7A3C00', 'other': '#a0a0a0', 'sapd': '#9B0000', 'dnf': '#003755', 'kvp': '#0087DC', 'lvp': '#FFCC00'},
            {'spd': 'SPD', 'kpd': 'KPD', 'ddp': Q.ddp_name, 'z': Q.z_party_name + ' + BVP', 'dvp': 'DVP', 'dnvp': 'DNVP', 'nsdap': 'NSDAP', 'other': 'Others', 'sapd': 'SAPD', 'dnf': 'DNF', 'kvp': 'KVP', 'lvp': 'LVP'});
    lines.width(width).height(400);
    //var svg = lines(Q.election_records);
    d3.select("#election_history").datum(Q.election_records).call(lines);
    //document.getElementById('election_history').innerHTML = svg.outerHTML;

    // party support records should not have so many ticks
    if (!Q.historical_mode) {
        var lines_2 = d3.linegraph(true, true,
            Q.parties,
            {'spd': '#E3000F', 'kpd': '#700000', 'ddp': '#D3C24D', 'z': '#000', 'dvp': '#D5AC27', 'dnvp': '#3E88B3', 'nsdap': '#7A3C00', 'other': '#a0a0a0', 'sapd': '#9B0000', 'dnf': '#003755', 'kvp': '#0087DC', 'lvp': '#FFCC00'},
            {'spd': 'SPD', 'kpd': 'KPD', 'ddp': Q.ddp_name, 'z': Q.z_party_name + ' + BVP', 'dvp': 'DVP', 'dnvp': 'DNVP', 'nsdap': 'NSDAP', 'other': 'Others', 'sapd': 'SAPD', 'dnf': 'DNF', 'kvp': 'KVP', 'lvp': 'LVP'});
        lines_2.width(width).height(400);
        d3.select("#party_support_history").datum(Q.party_support_records).call(lines_2);
    }
}
!}
go-to: coalition_menu

= Election results

{!<svg id="reichstag" style="width: 500px; height: 250px;"> </svg>!}

{!<table>!} 
{!<tr><td>Party</td><td>Vote share</td><td>% Change</td><td>Reichstag Seats</td><td>% Change</td></tr>!}
{!<tr><td><div class="box" style='background-color:#E3000F; outline: 2px; outline-style: solid;'> </div> !} **SPD:** {!</td><td>!} **[+ spd_votes +]%** {!</td><td>!} **[+ str_votes_change_spd +]** {!</td><td>!} **[+ spd_r +]%** {!</td><td>!} **[+ str_change_spd +]** {!</td></tr>!}

[? if sapd_formed : {!<tr><td><div class="box" style='background-color:#9B0000'> </div> !}SAPD: {!</td><td>!} [+ sapd_votes +]% {!</td><td>!} [+ str_votes_change_sapd +] {!</td><td>!} [+ sapd_r +]% {!</td><td>!} [+ str_change_sapd +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#700000'> </div> !}KPD: {!</td><td>!} [+ kpd_votes +]% {!</td><td>!} [+ str_votes_change_kpd +] {!</td><td>!} [+ kpd_r +]% {!</td><td>!} [+ str_change_kpd +] {!</td></tr>!}

[? if not lvp_formed: {!<tr><td><div class="box" style='background-color:#D3C24D'> </div> !} [+ ddp_name +]: {!</td><td>!} [+ ddp_votes +]% {!</td><td>!} [+ str_votes_change_ddp +] {!</td><td>!} [+ ddp_r +]% {!</td><td>!} [+ str_change_ddp +] {!</td></tr>!} ?]

[? if lvp_formed: {!<tr><td><div class="box" style='background-color:#FFCC00'> </div> !} LVP: {!</td><td>!} [+ lvp_votes +]% {!</td><td>!} [+ str_votes_change_lvp +] {!</td><td>!} [+ lvp_r +]% {!</td><td>!} [+ str_change_lvp +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#000'> </div> !} Z: {!</td><td>!} [+ z_minus_bvp_votes +]% {!</td><td>!} [+ str_votes_change_z +] {!</td><td>!} [+ z_minus_bvp_r +]% {!</td><td>!} [+ str_change_z +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#A2D8E0'> </div> !} BVP: {!</td><td>!} 3%{!</td><td>!} {!<img src="img/steady.jpg"> !}0.0 {!</td><td>!} 3% {!</td><td>!} {!<img src="img/steady.jpg"> !}0.0 {!</td></tr>!}

[? if not lvp_formed: {!<tr><td><div class="box" style='background-color:#D5AC27'> </div> !} DVP: {!</td><td>!} [+ dvp_votes +]% {!</td><td>!} [+ str_votes_change_dvp +] {!</td><td>!} [+ dvp_r +]% {!</td><td>!} [+ str_change_dvp +] {!</td></tr>!} ?]
 
{!<tr><td><div class="box" style='background-color:#a0a0a0'> </div> !} Others: {!</td><td>!} [+ other_votes +]% {!</td><td>!} [+ str_votes_change_other +] {!</td><td>!} [+ other_r +]% {!</td><td>!} [+ str_change_other +] {!</td></tr>!}

[? if kvp_formed : {!<tr><td><div class="box" style='background-color:#0087DC'> </div> !}KVP: {!</td><td>!} [+ kvp_votes +]% {!</td><td>!} [+ str_votes_change_kvp +] {!</td><td>!} [+ kvp_r +]% {!</td><td>!} [+ str_change_kvp +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#3E88B3'> </div> !} DNVP: {!</td><td>!} [+ dnvp_votes +]% {!</td><td>!} [+ str_votes_change_dnvp +] {!</td><td>!} [+ dnvp_r +]% {!</td><td>!} [+ str_change_dnvp +] {!</td></tr>!}

[? if dnf_formed : {!<tr><td><div class="box" style='background-color:#003755'> </div> !}DNF: {!</td><td>!} [+ dnf_votes +]% {!</td><td>!} [+ str_votes_change_dnf +] {!</td><td>!} [+ dnf_r +]% {!</td><td>!} [+ str_change_dnf +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#7A3C00'> </div> !} NSDAP: {!</td><td>!} [+ nsdap_votes +]% {!</td><td>!} [+ str_votes_change_nsdap +] {!</td><td>!} [+ nsdap_r +]% {!</td><td>!} [+ str_change_nsdap +] {!</td></tr>!}
{!</table>!}

{!<button class="tab_button" id="demographics_tab" onclick="window.toggleDem();">Demographic Results</button>!}
{!<button class="tab_button" id="election_tab" onclick="window.toggleElectionGraph();">Previous Elections Graph</button>!}
{!<button class="tab_button" id="graph_tab" onclick="window.toggleGraph();">Party Support Graph</button>!}

{!<div id="results" style="display: none;">!}
    {!<div style="overflow-x:auto;">!}
    {!<table style="text-align:center; border-spacing: 0.2em;">!}
        {!<tr>!}
            {!<th>Party</th>!}
            {!<th>Workers</th>!}
            {!<th>New Middle Class</th>!}
            {!<th>Old Middle Class</th>!}
            {!<th>Rural</th>!}
            {!<th>Unemployed</th>!}
            {!<th>Catholics</th>!}
        {!</tr>!}
        {!<tr>!}
            {!<td><span style="color: #c00000;"><b>SPD</b></span></td>!}
            {!<td style="background-color: rgba(192, 0, 0, 0.1); font-size: 0.85em; padding: 10px">!}[+ workers_spd_display +]%[? if n_elections != 1 and demo_change_workers_spd_display != 0 : ([+ demo_change_workers_spd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 0, 0, 0.1); font-size: 0.85em;">!}[+ new_middle_spd_display +]%[? if n_elections != 1 and demo_change_new_middle_spd_display != 0 : ([+ demo_change_new_middle_spd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 0, 0, 0.1); font-size: 0.85em;">!}[+ old_middle_spd_display +]%[? if n_elections != 1 and demo_change_old_middle_spd_display != 0 : ([+ demo_change_old_middle_spd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 0, 0, 0.1); font-size: 0.85em;">!}[+ rural_spd_display +]%[? if n_elections != 1 and demo_change_rural_spd_display != 0 : ([+ demo_change_rural_spd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 0, 0, 0.1); font-size: 0.85em;">!}[+ unemployed_spd_display +]%[? if n_elections != 1 and demo_change_unemployed_spd_display != 0 : ([+ demo_change_unemployed_spd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 0, 0, 0.1); font-size: 0.85em;">!}[+ catholics_spd_display +]%[? if n_elections != 1 and demo_change_catholics_spd_display != 0 : ([+ demo_change_catholics_spd_display +])?]{!</td>!}
        {!</tr>!}
        [? if sapd_formed: {!<tr>!}
            {!<td><span style="color: #9B0000;">!}**SAPD**{!</span></td>!}
            {!<td style="background-color: rgba(155, 0, 0, 0.2); padding: 10px; font-size: 0.85em;">!}[+ workers_sapd_display +]%[? if n_elections != 1 and demo_change_workers_sapd_display != 0 : ([+ demo_change_workers_sapd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(155, 0, 0, 0.2); font-size: 0.85em;">!}[+ new_middle_sapd_display +]%[? if n_elections != 1 and demo_change_new_middle_sapd_display != 0 : ([+ demo_change_new_middle_sapd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(155, 0, 0, 0.2); font-size: 0.85em;">!}[+ old_middle_sapd_display +]%[? if n_elections != 1 and demo_change_old_middle_sapd_display != 0 : ([+ demo_change_old_middle_sapd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(155, 0, 0, 0.2); font-size: 0.85em;">!}[+ rural_sapd_display +]%[? if n_elections != 1 and demo_change_rural_sapd_display != 0 : ([+ demo_change_rural_sapd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(155, 0, 0, 0.2); font-size: 0.85em;">!}[+ unemployed_sapd_display +]%[? if n_elections != 1 and demo_change_unemployed_sapd_display != 0 : ([+ demo_change_unemployed_sapd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(155, 0, 0, 0.2); font-size: 0.85em;">!}[+ catholics_sapd_display +]%[? if n_elections != 1 and demo_change_catholics_sapd_display != 0 : ([+ demo_change_catholics_sapd_display +])?]{!</td>!}
        {!</tr>!}?]
        {!<tr>!}
            {!<td><span style="color: #000000;"><b>Z</b></span> + <span style="color: #4B758B;"><b>BVP</b></span></td>!}
            {!<td style="background-color: rgba(0, 0, 0, 0.2); font-size: 0.85em; padding: 10px">!}[+ workers_z_display +]%[? if n_elections != 1 and demo_change_workers_z_display != 0 : ([+ demo_change_workers_z_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 0, 0, 0.2); font-size: 0.85em;">!}[+ new_middle_z_display +]%[? if n_elections != 1 and demo_change_new_middle_z_display != 0 : ([+ demo_change_new_middle_z_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 0, 0, 0.2); font-size: 0.85em;">!}[+ old_middle_z_display +]%[? if n_elections != 1 and demo_change_old_middle_z_display != 0 : ([+ demo_change_old_middle_z_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 0, 0, 0.2); font-size: 0.85em;">!}[+ rural_z_display +]%[? if n_elections != 1 and demo_change_rural_z_display != 0 : ([+ demo_change_rural_z_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 0, 0, 0.2); font-size: 0.85em;">!}[+ unemployed_z_display +]%[? if n_elections != 1 and demo_change_unemployed_z_display != 0 : ([+ demo_change_unemployed_z_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 0, 0, 0.2); font-size: 0.85em;">!}[+ catholics_z_display +]%[? if n_elections != 1 and demo_change_catholics_z_display != 0 : ([+ demo_change_catholics_z_display +])?]{!</td>!}
        {!</tr>!}
        {!<tr>!}
            {!<td><span style="color: #700000;"><b>KPD</b></span></td>!}
            {!<td style="background-color: rgba(112, 0, 0, 0.2); font-size: 0.85em; padding: 10px">!}[+ workers_kpd_display +]%[? if n_elections != 1 and demo_change_workers_kpd_display != 0 : ([+ demo_change_workers_kpd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(112, 0, 0, 0.2); font-size: 0.85em;">!}[+ new_middle_kpd_display +]%[? if n_elections != 1 and demo_change_new_middle_kpd_display != 0 : ([+ demo_change_new_middle_kpd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(112, 0, 0, 0.2); font-size: 0.85em;">!}[+ old_middle_kpd_display +]%[? if n_elections != 1 and demo_change_old_middle_kpd_display != 0 : ([+ demo_change_old_middle_kpd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(112, 0, 0, 0.2); font-size: 0.85em;">!}[+ rural_kpd_display +]%[? if n_elections != 1 and demo_change_rural_kpd_display != 0 : ([+ demo_change_rural_kpd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(112, 0, 0, 0.2); font-size: 0.85em;">!}[+ unemployed_kpd_display +]%[? if n_elections != 1 and demo_change_unemployed_kpd_display != 0 : ([+ demo_change_unemployed_kpd_display +])?]{!</td>!}
            {!<td style="background-color: rgba(112, 0, 0, 0.2); font-size: 0.85em;">!}[+ catholics_kpd_display +]%[? if n_elections != 1 and demo_change_catholics_kpd_display != 0 : ([+ demo_change_catholics_kpd_display +])?]{!</td>!}
        {!</tr>!}
        [? if not lvp_formed: {!<tr>!}
            {!<td>!}<span style="color: #D3C24D;">**[+ ddp_name +]**</span>{!</td>!}
            {!<td style="background-color: rgba(211, 194, 77, 0.2); font-size: 0.85em; padding: 10px">!}[+ workers_ddp_display +]%[? if n_elections != 1 and demo_change_workers_ddp_display != 0 : ([+ demo_change_workers_ddp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(211, 194, 77, 0.2); font-size: 0.85em;">!}[+ new_middle_ddp_display +]%[? if n_elections != 1 and demo_change_new_middle_ddp_display != 0 : ([+ demo_change_new_middle_ddp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(211, 194, 77, 0.2); font-size: 0.85em;">!}[+ old_middle_ddp_display +]%[? if n_elections != 1 and demo_change_old_middle_ddp_display != 0 : ([+ demo_change_old_middle_ddp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(211, 194, 77, 0.2); font-size: 0.85em;">!}[+ rural_ddp_display +]%[? if n_elections != 1 and demo_change_rural_ddp_display != 0 : ([+ demo_change_rural_ddp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(211, 194, 77, 0.2); font-size: 0.85em;">!}[+ unemployed_ddp_display +]%[? if n_elections != 1 and demo_change_unemployed_ddp_display != 0 : ([+ demo_change_unemployed_ddp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(211, 194, 77, 0.2); font-size: 0.85em;">!}[+ catholics_ddp_display +]%[? if n_elections != 1 and demo_change_catholics_ddp_display != 0 : ([+ demo_change_catholics_ddp_display +])?]{!</td>!}
        {!</tr>!} ?]
        [? if lvp_formed: {!<tr>!}
            {!<td>!}<span style="color: #FFCC00;">**LVP**</span>{!</td>!}
            {!<td style="background-color: rgba(255, 204, 0, 0.2); font-size: 0.85em; padding: 10px">!}[+ workers_lvp_display +]%[? if n_elections != 1 and demo_change_workers_lvp_display != 0 : ([+ demo_change_workers_lvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(255, 204, 0, 0.2); font-size: 0.85em;">!}[+ new_middle_lvp_display +]%[? if n_elections != 1 and demo_change_new_middle_lvp_display != 0 : ([+ demo_change_new_middle_lvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(255, 204, 0, 0.2); font-size: 0.85em;">!}[+ old_middle_lvp_display +]%[? if n_elections != 1 and demo_change_old_middle_lvp_display != 0 : ([+ demo_change_old_middle_lvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(255, 204, 0, 0.2); font-size: 0.85em;">!}[+ rural_lvp_display +]%[? if n_elections != 1 and demo_change_rural_lvp_display != 0 : ([+ demo_change_rural_lvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(255, 204, 0, 0.2); font-size: 0.85em;">!}[+ unemployed_lvp_display +]%[? if n_elections != 1 and demo_change_unemployed_lvp_display != 0 : ([+ demo_change_unemployed_lvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(255, 204, 0, 0.2); font-size: 0.85em;">!}[+ catholics_lvp_display +]%[? if n_elections != 1 and demo_change_catholics_lvp_display != 0 : ([+ demo_change_catholics_lvp_display +])?]{!</td>!}
        {!</tr>!} ?]
        [? if not lvp_formed: {!<tr>!}
            {!<td><span style="color: #C0A054;"><b>DVP</b></span></td>!}
            {!<td style="background-color: rgba(192, 160, 84, 0.2); font-size: 0.85em; padding: 10px">!}[+ workers_dvp_display +]%[? if n_elections != 1 and demo_change_workers_dvp_display != 0 : ([+ demo_change_workers_dvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 160, 84, 0.2); font-size: 0.85em;">!}[+ new_middle_dvp_display +]%[? if n_elections != 1 and demo_change_new_middle_dvp_display != 0 : ([+ demo_change_new_middle_dvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 160, 84, 0.2); font-size: 0.85em;">!}[+ old_middle_dvp_display +]%[? if n_elections != 1 and demo_change_old_middle_dvp_display != 0 : ([+ demo_change_old_middle_dvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 160, 84, 0.2); font-size: 0.85em;">!}[+ rural_dvp_display +]%[? if n_elections != 1 and demo_change_rural_dvp_display != 0 : ([+ demo_change_rural_dvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 160, 84, 0.2); font-size: 0.85em;">!}[+ unemployed_dvp_display +]%[? if n_elections != 1 and demo_change_unemployed_dvp_display != 0 : ([+ demo_change_unemployed_dvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(192, 160, 84, 0.2); font-size: 0.85em;">!}[+ catholics_dvp_display +]%[? if n_elections != 1 and demo_change_catholics_dvp_display != 0 : ([+ demo_change_catholics_dvp_display +])?]{!</td>!}
        {!</tr>!} ?]
        [? if kvp_formed: {!<tr>!}
            {!<td><span style="color: #0087DC;">!}**KVP**{!</span></td>!}
            {!<td style="background-color: rgba(0, 135, 220, 0.2); padding: 10px; font-size: 0.85em;">!}[+ workers_kvp_display +]%[? if n_elections != 1 and       demo_change_workers_kvp_display != 0 : ([+ demo_change_workers_kvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 135, 220, 0.2); font-size: 0.85em;">!}[+ new_middle_kvp_display +]%[? if n_elections != 1 and demo_change_new_middle_kvp_display != 0 : ([+ demo_change_new_middle_kvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 135, 220, 0.2); font-size: 0.85em;">!}[+ old_middle_kvp_display +]%[? if n_elections != 1 and demo_change_old_middle_kvp_display != 0 : ([+ demo_change_old_middle_kvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 135, 220, 0.2); font-size: 0.85em;">!}[+ rural_kvp_display +]%[? if n_elections != 1 and demo_change_rural_kvp_display != 0 : ([+ demo_change_rural_kvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 135, 220, 0.2); font-size: 0.85em;">!}[+ unemployed_kvp_display +]%[? if n_elections != 1 and demo_change_unemployed_kvp_display != 0 : ([+ demo_change_unemployed_kvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 135, 220, 0.2); font-size: 0.85em;">!}[+ catholics_kvp_display +]%[? if n_elections != 1 and demo_change_catholics_kvp_display != 0 : ([+ demo_change_catholics_kvp_display +])?]{!</td>!}
        {!</tr>!} ?]
        {!<tr>!}
            {!<td><span style="color: #3E88B3;"><b>DNVP</b></span></td>!}
            {!<td style="background-color: rgba(44, 81, 122, 0.2); font-size: 0.85em; padding: 10px">!}[+ workers_dnvp_display +]%[? if n_elections != 1 and demo_change_workers_dnvp_display != 0 : ([+ demo_change_workers_dnvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(44, 81, 122, 0.2); font-size: 0.85em;">!}[+ new_middle_dnvp_display +]%[? if n_elections != 1 and demo_change_new_middle_dnvp_display != 0 : ([+ demo_change_new_middle_dnvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(44, 81, 122, 0.2); font-size: 0.85em;">!}[+ old_middle_dnvp_display +]%[? if n_elections != 1 and demo_change_old_middle_dnvp_display != 0 : ([+ demo_change_old_middle_dnvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(44, 81, 122, 0.2); font-size: 0.85em;">!}[+ rural_dnvp_display +]%[? if n_elections != 1 and demo_change_rural_dnvp_display != 0 : ([+ demo_change_rural_dnvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(44, 81, 122, 0.2); font-size: 0.85em;">!}[+ unemployed_dnvp_display +]%[? if n_elections != 1 and demo_change_unemployed_dnvp_display != 0 : ([+ demo_change_unemployed_dnvp_display +])?]{!</td>!}
            {!<td style="background-color: rgba(44, 81, 122, 0.2); font-size: 0.85em;">!}[+ catholics_dnvp_display +]%[? if n_elections != 1 and demo_change_catholics_dnvp_display != 0 : ([+ demo_change_catholics_dnvp_display +])?]{!</td>!}
        {!</tr>!}
        [? if dnf_formed: {!<tr>!}
            {!<td><span style="color: #003755;">!}**DNF**{!</span></td>!}
            {!<td style="background-color: rgba(0, 31, 48, 0.2); padding: 10px; font-size: 0.85em;">!}[+ workers_dnf_display +]%[? if n_elections != 1 and       demo_change_workers_dnf_display != 0 : ([+ demo_change_workers_dnf_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 31, 48, 0.2); font-size: 0.85em;">!}[+ new_middle_dnf_display +]%[? if n_elections != 1 and demo_change_new_middle_dnf_display != 0 : ([+ demo_change_new_middle_dnf_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 31, 48, 0.2); font-size: 0.85em;">!}[+ old_middle_dnf_display +]%[? if n_elections != 1 and demo_change_old_middle_dnf_display != 0 : ([+ demo_change_old_middle_dnf_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 31, 48, 0.2); font-size: 0.85em;">!}[+ rural_dnf_display +]%[? if n_elections != 1 and demo_change_rural_dnf_display != 0 : ([+ demo_change_rural_dnf_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 31, 48, 0.2); font-size: 0.85em;">!}[+ unemployed_dnf_display +]%[? if n_elections != 1 and demo_change_unemployed_dnf_display != 0 : ([+ demo_change_unemployed_dnf_display +])?]{!</td>!}
            {!<td style="background-color: rgba(0, 31, 48, 0.2); font-size: 0.85em;">!}[+ catholics_dnf_display +]%[? if n_elections != 1 and demo_change_catholics_dnf_display != 0 : ([+ demo_change_catholics_dnf_display +])?]{!</td>!}
        {!</tr>!} ?]
        {!<tr>!}
            {!<td><span style="color: #7A3C00;"><b>NSDAP</b></span></td>!}
            {!<td style="background-color: rgba(122, 60, 0, 0.2); font-size: 0.85em; padding: 10px">!}[+ workers_nsdap_display +]%[? if n_elections != 1 and demo_change_workers_nsdap_display != 0 : ([+ demo_change_workers_nsdap_display +])?]{!</td>!}
            {!<td style="background-color: rgba(122, 60, 0, 0.2); font-size: 0.85em;">!}[+ new_middle_nsdap_display +]%[? if n_elections != 1 and demo_change_new_middle_nsdap_display != 0 : ([+ demo_change_new_middle_nsdap_display +])?]{!</td>!}
            {!<td style="background-color: rgba(122, 60, 0, 0.2); font-size: 0.85em;">!}[+ old_middle_nsdap_display +]%[? if n_elections != 1 and demo_change_old_middle_nsdap_display != 0 : ([+ demo_change_old_middle_nsdap_display +])?]{!</td>!}
            {!<td style="background-color: rgba(122, 60, 0, 0.2); font-size: 0.85em;">!}[+ rural_nsdap_display +]%[? if n_elections != 1 and demo_change_rural_nsdap_display != 0 : ([+ demo_change_rural_nsdap_display +])?]{!</td>!}
            {!<td style="background-color: rgba(122, 60, 0, 0.2); font-size: 0.85em;">!}[+ unemployed_nsdap_display +]%[? if n_elections != 1 and demo_change_unemployed_nsdap_display != 0 : ([+ demo_change_unemployed_nsdap_display +])?]{!</td>!}
            {!<td style="background-color: rgba(122, 60, 0, 0.2); font-size: 0.85em;">!}[+ catholics_nsdap_display +]%[? if n_elections != 1 and demo_change_catholics_nsdap_display != 0 : ([+ demo_change_catholics_nsdap_display +])?]{!</td>!}
        {!</tr>!}
        {!<tr>!}
            {!<td><b>Others</b></td>!}
            {!<td style="background-color: rgba(144, 144, 144, 0.2); font-size: 0.85em; padding: 10px">!}[+ workers_other_display +]%[? if n_elections != 1 and demo_change_workers_other_display != 0 : ([+ demo_change_workers_other_display +])?]{!</td>!}
            {!<td style="background-color: rgba(144, 144, 144, 0.2); font-size: 0.85em;">!}[+ new_middle_other_display +]%[? if n_elections != 1 and demo_change_new_middle_other_display != 0 : ([+ demo_change_new_middle_other_display +])?]{!</td>!}
            {!<td style="background-color: rgba(144, 144, 144, 0.2); font-size: 0.85em;">!}[+ old_middle_other_display +]%[? if n_elections != 1 and demo_change_old_middle_other_display != 0 : ([+ demo_change_old_middle_other_display +])?]{!</td>!}
            {!<td style="background-color: rgba(144, 144, 144, 0.2); font-size: 0.85em;">!}[+ rural_other_display +]%[? if n_elections != 1 and demo_change_rural_other_display != 0 : ([+ demo_change_rural_other_display +])?]{!</td>!}
            {!<td style="background-color: rgba(144, 144, 144, 0.2); font-size: 0.85em;">!}[+ unemployed_other_display +]%[? if n_elections != 1 and demo_change_unemployed_other_display != 0 : ([+ demo_change_unemployed_other_display +])?]{!</td>!}
            {!<td style="background-color: rgba(144, 144, 144, 0.2); font-size: 0.85em;">!}[+ catholics_other_display +]%[? if n_elections != 1 and demo_change_catholics_other_display != 0 : ([+ demo_change_catholics_other_display +])?]{!</td>!}
        {!</tr>!}
    {!</table>!}
    {!</div>!}
{!</div>!}
{!<svg id="election_history" style="width: 500px; height: 400px; display: none;"> </svg>!}
{!<svg id="party_support_history" style="width: 500px; height: 400px; display: none;"> </svg>!}

**Potential coalitions:**

[? if kpd_relation >= 40 and left_coalition >= 45: United Left Coalition (<span style="color: #c00000;">**SPD**</span> + <span style="color: #700000;">**KPD**</span>[? if sapd_formed:  + <span style="color: #9B0000;">**SAPD**</span>?]): [+ left_coalition +]% ?]

[? if kpd_relation > 35 and z_relation > 35: Popular Front Coalition (<span style="color: #c00000;">**SPD**</span> + <span style="color: #700000;">**KPD**</span> + <span style="color: #000000;">**Z**</span>[? if (liberal_parliament == 0 and bourgeois_parliament_ddp == 0) and not lvp_formed:&nbsp;+ <span style="color: #D3C24D;">**[+ ddp_name +]**</span>?][? if sapd_formed:&nbsp;+ <span style="color: #9B0000;">**SAPD**</span>?]): [+ popular_front_coalition +]% ?]

<span style="color: #000000;">We</span><span style="color: #DD0000;">im</span><span style="color: #FFCC00;">ar</span> Coalition (<span style="color: #c00000;">**SPD**</span> + <span style="color: #000000;">**Z**</span> + [? if not lvp_formed:<span style="color: #D3C24D;">**[+ ddp_name +]**</span>?][? if lvp_formed:<span style="color: #FFCC00;">**LVP**</span>?][? if sapd_formed and kpd_relation >= 30:&nbsp;+ <span style="color: #9B0000;">**SAPD**</span>?]): [+ weimar_coalition +]%

Grand Coalition (<span style="color: #c00000;">**SPD**</span> + <span style="color: #000000;">**Z**</span> + <span style="color: #A2D8E0;">**BVP**</span> + [? if not lvp_formed: <span style="color: #D3C24D;">**[+ ddp_name +]**</span> + <span style="color: #C0A054;">**DVP**</span>?][? if lvp_formed:<span style="color: #FFCC00;">**LVP**</span>?]): [+ grand_coalition +]%

[? if bourgeois_coalition >= 25 and not kvp_formed: Bourgeois Coalition (<span style="color: #000000;">**Z**</span> + <span style="color: #A2D8E0;">**BVP**</span> + [? if not lvp_formed: <span style="color: #D3C24D;">**[+ ddp_name +]**</span> + <span style="color: #C0A054;">**DVP**</span>?][? if lvp_formed: <span style="color: #FFCC00;">**LVP**</span>?] + **Others**): [+ bourgeois_coalition +]% ?]

[? if bourgeois_coalition >= 25 and kvp_formed: Bourgeois Coalition (<span style="color: #000000;">**Z**</span> + <span style="color: #A2D8E0;">**BVP**</span> + [? if not lvp_formed: <span style="color: #D3C24D;">**[+ ddp_name +]**</span> + <span style="color: #C0A054;">**DVP**</span>?][? if lvp_formed:<span style="color: #FFCC00;">**LVP**</span>?] + **Others** + <span style="color: #0087DC;">**KVP**</span>): [+ bourgeois_coalition +]% ?]

[? if dnvp_ideology == "Moderate" and not lvp_formed: Center-Right Coalition (<span style="color: #000000;">**Z**</span> + <span style="color: #A2D8E0;">**BVP**</span> + <span style="color: #D3C24D;">**[+ ddp_name +]**</span> + <span style="color: #C0A054;">**DVP**</span> + **Others** + <span style="color: #3E88B3;">**DNVP**</span>): [+ center_right_coalition +]% ?]

[? if dnvp_ideology == "Radical" or lvp_formed: Right-wing Coalition (<span style="color: #000000;">**Z**</span> + <span style="color: #A2D8E0;">**BVP**</span> + [? if not lvp_formed: <span style="color: #C0A054;">**DVP**</span>?][? if lvp_formed:<span style="color: #FFCC00;">**LVP**</span>?] + **Others** + <span style="color: #3E88B3;">**DNVP**</span>): [+ right_coalition +]% ?]

[? if dnvp_ideology == "Radical" and far_right_coalition >= 35: <span style="color: #7A3C00;">Far</span>-<span style="color: #3E88B3;">right</span> Coalition (<span style="color: #3E88B3;">**DNVP**</span> + <span style="color: #7A3C00;">**NSDAP**</span>): [+ far_right_coalition +]% ?]

[? if dnvp_ideology == "Moderate" and far_right_coalition >= 30: <span style="color: #7A3C00;">Far</span>-<span style="color: #3E88B3;">right</span> Coalition (<span style="color: #003755;">**DNF**</span> + <span style="color: #7A3C00;">**NSDAP**</span>): [+ far_right_coalition +]% ?]

[? if nazi_urgency <= 1 and nsdap_r >= 15 : The rapid rise in <span style="color: #7A3C00;">**NSDAP**</span> votes is extremely worrying. Many had believed that the party was moribund; now, some of us consider it to be the greatest threat to democracy in Germany. ?]

[? if anti_democratic_coalition >= 50 and dnvp_ideology == "Radical": Together, the anti-democratic <span style="color: #700000;">**KPD**</span>, <span style="color: #3E88B3;">**DNVP**</span>, and <span style="color: #7A3C00;">**NSDAP**</span> have a majority in the Reichstag. A stable governing majority will be almost impossible. ?]

[? if anti_democratic_coalition >= 50 and dnvp_ideology == "Moderate": Together, the anti-democratic <span style="color: #700000;">**KPD**</span>, <span style="color: #003755;">**DNF**</span>, and <span style="color: #7A3C00;">**NSDAP**</span> have a majority in the Reichstag. A stable governing majority will be almost impossible. ?]

There are some potential coalition arrangements.

@coalition_menu

- @nothing: Nothing.

@nothing

Yea