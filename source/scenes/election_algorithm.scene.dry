title: Election
on-arrival: {!
// calculate normalized class voting amounts (0 to 100)
for (var c of Q.classes) {
    var class_votes = 0;
    for (var party of Q.parties) {
        if (Q[c+'_'+party] < 0) {
            Q[c+'_'+party] = 0;
        }
        class_votes += (Q[c+'_'+party]*Q[party+'_turnout']);
    }
    for (var party of Q.parties) {
        Q[c + '_' + party + '_normalized'] = 100*(Q[c+'_'+party]*Q[party+'_turnout'])/class_votes;
        Q[c + '_' + party + '_display'] = Math.round(100*(Q[c+'_'+party]*Q[party+'_turnout'])/class_votes);
    }
}
// calculate support for each of the parties
var total_support = 0; 
for (var party of Q.parties) {
    var party_support = 0;
    for (var c of Q.classes) {
        if (Q.old_demographics) { 
            party_support += Q[c]*Q[c+'_'+party];
        } else  { 
            party_support += Q[c]*Q[c+'_turnout']*Q[c+'_'+party+'_normalized'];
        } 
    }
    Q[party + '_support'] = party_support;
    total_support += party_support; 
}
// 2. normalize support (fraction)
for (var party of Q.parties) {
    Q[party+'_normalized'] = Q[party + '_support']/total_support;
    Q[party+'_votes'] = Math.round(Q[party+'_normalized']*1000)/10;
}

!}
go-to: jumpScene if not go_election; election_1928 if go_election
on-departure: go_election = 0;

# note: this is a helpful utility to deal with elections and so on.
